# Raw Sysmon data from WinEventLog input.
# Original:
#    source = WinEventLog:Microsoft-Windows-Sysmon/Operational
#    sourcetype = XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
# Our companion addon TA-TC-Sysmon-Transforms, which if enabled on HF/indexers, will change those to:
#    source = sysmon:wineventlog
#    sourcetype = sysmon:events:*
#  and pack the _raw to shorter format. Source is changed to avoid Windows TA touching it (for speed optimization).
# Priority setting is needed to avoid Windows TA from changing both source and sourcetype
# before we have a chance for it.

# https://docs.splunk.com/Documentation/Splunk/latest/Knowledge/Searchtimeoperationssequence

# backwards compatibility:
[XmlWinEventLog:Microsoft-Windows-Sysmon/Operational]
priority = 99
TIME_PREFIX = <Data Name='UtcTime'>
TIME_FORMAT = %Y-%m-%d %H:%M:%S.%3N
TZ = UTC
MAX_TIMESTAMP_LOOKAHEAD = 40
SHOULD_LINEMERGE = false
ANNOTATE_PUNCT = false
LEARN_SOURCETYPE = false
AUTO_KV_JSON = false
KV_MODE = none
rename = sysmon:events:wineventlog


# events from TA-TC-Sysmon-Transforms or the rename above
[(?::){0}sysmon:events*]
TIME_PREFIX = <Data Name='UtcTime'>
TIME_FORMAT = %Y-%m-%d %H:%M:%S.%3N
TZ = UTC
MAX_TIMESTAMP_LOOKAHEAD = 40
SHOULD_LINEMERGE = false
ANNOTATE_PUNCT = false
LEARN_SOURCETYPE = false
AUTO_KV_JSON = false
KV_MODE = none

# https://docs.splunk.com/Documentation/CIM/5.0.1/User/Endpoint

REPORT-a-sysmon-header = sysmon-signatureid,sysmon-wineventlog-header
REPORT-a-sysmon-data = sysmon-data,sysmon-hashes-split,sysmon-hashes-to-filehash,sysmon-hash-to-filehash,sysmon-confighash-split,sysmon-confighash-to-filehash,sysmon-targetfilename,sysmon-targetobject
REPORT-z-sysmon-after = sysmon-image-process

# common for (nearly) all events
FIELDALIAS-signature_id = EventCode as signature_id
FIELDALIAS-event_id = event_id as EventRecordID
FIELDALIAS-process_guid = ProcessGuid asnew process_guid
FIELDALIAS-process_id = ProcessId asnew process_id
FIELDALIAS-process_name = process_exec asnew process_name
FIELDALIAS-process_path = Image asnew process_path
FIELDALIAS-user = User ASNEW user, TargetUser ASNEW user
FIELDALIAS-src_user = SourceUser ASNEW src_user, ParentUser ASNEW src_user
FIELDALIAS-parent_process_user = SourceUser ASNEW parent_process_user, ParentUser ASNEW parent_process_user
#FIELDALIAS-rule_name = RuleName as rule_name
FIELDALIAS-session_id = SourceProcessGuid asnew session_id, ProcessGuid asnew session_id
FIELDALIAS-dvc = Computer asnew dvc, host asnew dvc
FIELDALIAS-dest = Computer asnew dest, host asnew dest
FIELDALIAS-object_path = TargetFilename as file_path

LOOKUP-action = sysmon_eventtype_lookup EventCode, EventType OUTPUTNEW action
LOOKUP-signature = sysmon_eventcodes EventCode OUTPUTNEW EventDescription AS signature, action

EVAL-vendor_product = "Microsoft Sysmon"
EVAL-SHA256 = lower(SHA256)
EVAL-SHA512 = lower(SHA512)
EVAL-IMPHASH = lower(IMPHASH)
EVAL-MD5 = lower(MD5)
EVAL-SHA1 = lower(SHA1)
#EVAL-app = replace(replace(replace(coalesce(TargetImage, Image, SourceImage), "&lt;", "<"), "&gt;", ">"), "&amp;", "&")
#EVAL-process_path = replace(replace(replace(coalesce(Image, SourceImage), "&lt;", "<"), "&gt;", ">"), "&amp;", "&")
#EVAL-Image = replace(replace(replace(Image, "&lt;", "<"), "&gt;", ">"), "&amp;", "&")
#EVAL-process = coalesce(replace(replace(replace(process, "&lt;", "<"), "&gt;", ">"), "&amp;", "&"), if(EventCode=="6","System",null()))

#EVAL-file_signature_status = case(EventCode!=6 AND EventCode!=7, null(), match(Signed, "Failed to open"), "open_failed", SignatureStatus=="?", "unknown", 1==1, coalesce(lower(SignatureStatus), "unknown"))
#EVAL-file_signature_valid = case(EventCode!=6 AND EventCode!=7, null(), match(Signed, "failed"), "unknown", Signed=="true" AND SignatureStatus=="Valid", "true", 1==1, "false")


# ID 1
[sysmon:events:processcreated]
REPORT-extra = sysmon-parentimage,sysmon-parentcommandline-params,sysmon-commandline-params
FIELDALIAS-parent_process = ParentCommandLine AS parent_process
FIELDALIAS-parent_process_id = ParentProcessId asnew parent_process_id
FIELDALIAS-parent_process_guid = ParentProcessGuid asnew parent_process_guid
FIELDALIAS-parent_process_path = ParentImage as parent_process_path
FIELDALIAS-parent_process_name = parent_process_exec as parent_process_name
FIELDALIAS-process_current_directory = CurrentDirectory AS process_current_directory
FIELDALIAS-process_integrity_level = IntegrityLevel AS process_integrity_level
FIELDALIAS-process_hash = file_hash as process_hash
FIELDALIAS-process = CommandLine as process
#FIELDALIAS-src_user = ParentUser as src_user
FIELDALIAS-terminal_id = TerminalSessionId AS terminal_id
FIELDALIAS-logon-id = LogonGuid AS logon_guid, LogonId AS logon_id
FIELDALIAS-file_version = FileVersion as file_version
FIELDALIAS-file_description = Description as file_description
FIELDALIAS-file_company = Company as file_company
FIELDALIAS-file_product = Product as file_product
FIELDALIAS-original_file_name = OriginalFileName as original_file_name
EVAL-process_params = replace(replace(replace(process_params, "&lt;", "<"), "&gt;", ">"), "&amp;", "&")
EVAL-parent_process_params = replace(replace(replace(parent_process_params, "&lt;", "<"), "&gt;", ">"), "&amp;", "&")
EVAL-process = replace(replace(replace(process, "&lt;", "<"), "&gt;", ">"), "&amp;", "&")
EVAL-parent_process = replace(replace(replace(parent_process, "&lt;", "<"), "&gt;", ">"), "&amp;", "&")
#EVAL-process_name = replace(replace(replace(process_name, "&lt;", "<"), "&gt;", ">"), "&amp;", "&")
#EVAL-parent_process_name = replace(replace(replace(parent_process_name, "&lt;", "<"), "&gt;", ">"), "&amp;", "&")
EVAL-os = "Windows"


# ID 2
# CIM: Endpoint.Filesystem
# CIM: Change.Endpoint_Changes (disabled but supported)
[sysmon:events:filectimechanged]
FIELDALIAS-file_create_time = CreationUtcTime AS file_create_time
FIELDALIAS-file_modify_time = UtcTime as file_modify_time
#EVAL-file_create_time = if(match(file_create_time, "^20"), strptime(file_create_time ." UTC", "%Y-%m-%d %H:%M:%S.%N %Z"), file_create_time)
FIELDALIAS-file_create_time_prev = PreviousCreationUtcTime as file_create_time_old
FIELDALIAS-object_path = TargetFilename as object_path
FIELDALIAS-object = TargetFilename as object
EVAL-object_category = "file"
EVAL-object_attrs = "file_create_time=\"". CreationUtcTime ."\" file_create_time_old=\"". PreviousCreationUtcTime ."\""
EVAL-status = "success"
EVAL-change_type = "filesystem"

# ID 3
# CIM: Network_Traffic.All_Traffic
[sysmon:events:networkconnect]
FIELDALIAS-dest_ip = DestinationIp AS dest_ip
FIELDALIAS-dest_host = DestinationHostname AS dest_host
FIELDALIAS-dest_ptr = DestinationHostname as dest_ptr
FIELDALIAS-dest_port = DestinationPort AS dest_port
FIELDALIAS-src_host = SourceHostname AS src_host
FIELDALIAS-src_port = SourcePort AS src_port
FIELDALIAS-src_ip = SourceIp AS src_ip
FIELDALIAS-transport = Protocol AS transport
FIELDALIAS-initiated = Initiated AS initiated
LOOKUP-sysmon-traffic-direction = sysmon_direction Initiated OUTPUT direction
EVAL-src = if(Initiated=="true", host, src_ip)
EVAL-dest = if(Initiated=="true", dest_ip, host)
EVAL-transport_dest_port = mvzip(transport,dest_port,"/")
EVAL-protocol = coalesce(if(Initiated=="true",DestinationPortName,SourcePortName), "ip")
EVAL-rule = case(RuleName!="-", RuleName)
EVAL-state = "established"
EVAL-protocol_version = case(DestinationIsIpv6="true", "ipv6", "ipv4")

# ID 4
# CIM: Endpoint.Services
[sysmon:events:statechanged]
FIELDALIAS-state-and-schema-version = SchemaVersion AS schema_version, State AS state
FIELDALIAS-product_version = Version as product_version
EVAL-description = "Sysmon service ". case(State=="Started", "started", State=="Stopped", "stopped", true(), "state is now '". coalesce(State,"n/a") ."'")
EVAL-service = "Sysmon"
EVAL-service_name = "Sysmon"
#EVAL-status = case(State=="Started", "started", State=="Stopped", "stopped", true(), "unknown")
LOOKUP-sysmon-status = sysmon_state_lookup EventCode, State OUTPUT action, status

# ID 5
[sysmon:events:processterminated]
FIELDALIAS-process = Image as process

# ID 6
# CIM: Endpoint.Services
[sysmon:events:driverloaded]
REPORT-extra = sysmon-imageloaded-file,sysmon-imageloaded-as-process
FIELDALIAS-process_path = ImageLoaded as process_path
FIELDALIAS-service_path = ImageLoaded as service_path
FIELDALIAS-service_exec = file_name as service_exec
FIELDALIAS-service_signature = Signature as service_signature
FIELDALIAS-service_hash = file_hash as service_hash
FIELDALIAS-service_signature_exists = Signed as service_signature_exists
FIELDALIAS-file_signature = Signature AS file_signature
EVAL-service_signature_verified = if(SignatureStatus="Valid", "true", "false")
#EVAL-file_signature_status = case(EventCode!=6 AND EventCode!=7, null(), match(Signed, "Failed to open"), "open_failed", SignatureStatus=="?", "unknown", 1==1, coalesce(lower(SignatureStatus), "unknown"))
#EVAL-file_signature_valid = case(EventCode!=6 AND EventCode!=7, null(), match(Signed, "failed"), "unknown", Signed=="true" AND SignatureStatus=="Valid", "true", 1==1, "false")
EVAL-status = "started"
#EVAL-service_name = "?"

# ID 7
# CIM: Endpoint.Processes
#  Note. parent guid == child guid, as the process is the same.
#  File paths point to parent and child. This can be differentiated from the
#  normal process creation via action value.
[sysmon:events:imageloaded]
REPORT-extra = sysmon-image-as-parent,sysmon-imageloaded-as-process
# sysmon-imageloaded-file,
FIELDALIAS-service_dll_signature_exists = Signed as service_dll_signature_exists
FIELDALIAS-file_version = FileVersion as file_version
FIELDALIAS-file_description = Description as file_description
FIELDALIAS-file_company = Company as file_company
FIELDALIAS-file_product = Product as file_product
FIELDALIAS-file_signature = Signature AS file_signature
FIELDALIAS-original_file_name = OriginalFileName as original_file_name
FIELDALIAS-parent_process_path = Image as parent_process_path
FIELDALIAS-parent_process_guid = ProcessGuid as parent_process_guid
FIELDALIAS-parent_process_id = ProcessId as parent_process_id
FIELDALIAS-parent_process_name = parent_process_exec as parent_process_name
FIELDALIAS-process_path = ImageLoaded as process_path
FIELDALIAS-loaded_file = ImageLoaded as loaded_file
EVAL-service_dll_signature_verified = if(SignatureStatus="Valid", "true", "false")

# ID 8
# CIM: Endpoint.Processes
[sysmon:events:createremotethread]
REPORT-extra = sysmon-sourceimage-as-parent,sysmon-targetimage-as-process
FIELDALIAS-thread_id = NewThreadId AS thread_id
#, StartAddress AS target_start_address, StartFunction AS target_start_function, StartModule AS target_start_module
#FIELDALIAS-target_process_image = TargetImage as target_process_image
FIELDALIAS-process_id = ProcessId asnew process_id, TargetProcessId asnew process_id
FIELDALIAS-process_guid = TargetProcessGuid asnew process_guid
FIELDALIAS-src_function = StartFunction AS src_function
FIELDALIAS-src_address = StartAddress AS src_address
FIELDALIAS-src_module = StartModule AS src_module
#FIELDALIAS-file_name = target_start_module_file ASNEW file_name, process ASNEW file_name
FIELDALIAS-parent_process_path = SourceImage as parent_process_path
FIELDALIAS-parent_process_guid = SourceProcessGuid as parent_process_guid
FIELDALIAS-parent_process_id = SourceProcessId as parent_process_id
FIELDALIAS-parent_process_name = parent_process_exec as parent_process_name
FIELDALIAS-process_path = TargetImage as process_path
EVAL-process = "created_thread_id=". NewThreadId ." function=\"". StartFunction ."\" module=\"". StartModule ."\" address=\"". StartAddress ."\""

# ID 9
# CIM: Endpoint.Filesystem
#   Device
[sysmon:events:rawaccessread]
#FIELDALIAS-device = 
EVAL-file_path = "Device:". Device

# ID 10
# CIM: Endpoint.Processes
[sysmon:events:processaccess]
REPORT-extra = sysmon-sourceimage-as-parent,sysmon-targetimage-as-process
FIELDALIAS-parent_process_path = SourceImage as parent_process_path
FIELDALIAS-parent_process_guid = SourceProcessGUID as parent_process_guid
FIELDALIAS-parent_process_name = parent_process_exec as parent_process_name
FIELDALIAS-parent_process_id = SourceProcessId as parent_process_id
FIELDALIAS-parent_thread_id = SourceThreadId as parent_thread_id
FIELDALIAS-granted_access = GrantedAccess AS granted_access
FIELDALIAS-process_path = TargetImage as process_path
FIELDALIAS-process_guid = TargetProcessGUID as process_guid
FIELDALIAS-process_id = TargetProcessId as process_id
FIELDALIAS-call_trace = CallTrace as trace
#FIELDALIAS-src_user = SourceUser as src_user
#FIELDALIAS-user = TargetUser as user

# ID 11
# CIM: Endpoint.Filesystem
[sysmon:events:filecreated]
FIELDALIAS-file_create_time = CreationUtcTime as file_create_time
EVAL-object_category = "file"


# ID 12
# CIM: Endpoint.Registry
[sysmon:events:registrycreatedel]
FIELDALIAS-registry_path = TargetObject AS registry_path
FIELDALIAS-registry_key_name = TargetObject as registry_key_name
FIELDALIAS-object_path = TargetObject as object_path
EVAL-status = "success"
EVAL-object_category = "registry"
LOOKUP-sysmon_registry_hive = sysmon_registry_hive registry_path as TargetObject OUTPUT registry_hive

# ID 13
# CIM: Endpoint.Registry
[sysmon:events:registryvalueset]
REPORT-extra = sysmon-registry-keyname-valuename,sysmon-registryvaluetype
FIELDALIAS-registry_path = TargetObject AS registry_path
FIELDALIAS-registry_value_data = Details asnew registry_value_data
FIELDALIAS-object_path = TargetObject as object_path
EVAL-registry_value_type = case(isnotnull(registry_value_type), "REG_". registry_value_type, Details=="Binary Data", "REG_BINARY", true(), "REG_SZ")
EVAL-status = "success"
EVAL-object_category = "registry"
LOOKUP-sysmon_registry_hive = sysmon_registry_hive registry_path as TargetObject OUTPUT registry_hive

# ID 14. EventType can be "RenameKey" or "RenameValue"
# CIM: Endpoint.Registry
#  TODO: only success if xml header Keywords="0x8000000000000000" ??
[sysmon:events:registryrename]
REPORT-extra = sysmon-registryvaluetype
FIELDALIAS-registry_path = TargetObject AS registry_path
FIELDALIAS-registry_key_name = TargetObject as registry_key_name
FIELDALIAS-object_path = NewName as object_path
EVAL-registry_value_name = case(EventType="RenameValue", replace(TargetObject,"(.*)\\\(\w+|\(Default\))$","\2") )
EVAL-registry_value_type = case(EventType="RenameValue", case(isnotnull(registry_value_type), "REG_". registry_value_type, Details=="Binary Data", "REG_BINARY", true(), "REG_SZ") )
EVAL-status = "success"
EVAL-object_category = "registry"
LOOKUP-sysmon_registry_hive = sysmon_registry_hive registry_path as TargetObject OUTPUT registry_hive

# ID 15
# CIM: Endpoint.Filesystem + Data_Access
#   TargetFilename: C:\Users\xx\Downloads\filename.json:Zone.Identifier
#   Contents: [ZoneTransfer]  ZoneId=3  HostUrl=https://foobar.net/path
[sysmon:events:filecreatestream]
REPORT-extra = sysmon-kv-contents,sysmon-hash-split,sysmon-hosturl-split,sysmon-referrerurl-split
FIELDALIAS-http_referrer = ReferrerUrl AS http_referrer
FIELDALIAS-url = HostUrl AS url
FIELDALIAS-url_zone = ZoneId as url_zone, ZoneId as src_zone
#EVAL-http_referrer_domain = replace(ReferrerUrl, "(?:^\w+:|^)//(?:[^@]*@)?(.*)/" ,"\1")
EVAL-url_length = len(url)

#-- CIM: Data_Access
#   File downloaded: This is valid when url_domain extraction exists, switching "dest".
#FIELDALIAS-src = url_domain as src
FIELDALIAS-dest_url = HostUrl as dest_url
FIELDALIAS-app = Image as app
FIELDALIAS-object = HostUrl as object
FIELDALIAS-dest = url_domain asnew dest, Computer asnew dest, host asnew dest
EVAL-action = if(isnotnull(url), "downloaded", action)
#EVAL-dest = if(url_domain!="", url_domain, coalesc)
EVAL-dest_name = if(isnotnull(url_domain), url_domain, null())
EVAL-object_category = "file"
EVAL-object_path = replace(file_path, ":Zone.Identifier$", "")
EVAL-object_attrs = if(isnotnull(http_referrer), "http_referrer=". http_referrer, null())
EVAL-src = if(isnotnull(url_domain), host, null())

# ID 16
# CIM: Endpoint.Services
#    + Change.Endpoint_Changes ?
[sysmon:events:configchange]
FIELDALIAS-file_path = Configuration as file_path
FIELDALIAS-file_hash = ConfigurationFileHash as file_hash
EVAL-description = "Sysmon configuration changed"
EVAL-service = "Sysmon"
EVAL-service_name = "Sysmon"

# ID 17
# Unclear what datamodel this should use. None really fit.
[sysmon:events:pipecreated]
FIELDALIAS-pipe_name = PipeName AS pipe_name

# ID 18
[sysmon:events:pipeconnected]
FIELDALIAS-pipe_name = PipeName AS pipe_name

# ID 19
# CIM: Change.Endpoint_Changes
#   EventType, Operation, EventNamespace, Name, Query
[sysmon:events:wmifilterregistered]
FIELDALIAS-user_name = User asnew user_name
FIELDALIAS-result = Operation as result
EVAL-change_type = "filesystem"
# TODO: object, object_category, object_path
EVAL-status = "success"
EVAL-object_category = "wmi"
#EVAL-user_name = replace(User, "(.*)\\\(.+)$","\2")

# ID 20
# CIM: Change.Endpoint_Changes
#   EventType, Operation, Name, Type, Destination
[sysmon:events:wmiconsumerregistered]
REPORT-extra = sysmon-destination-unquote
FIELDALIAS-user_name = User asnew user_name
FIELDALIAS-object_path = DestinationNoQuotes as object_path
FIELDALIAS-result = Operation as result
EVAL-object = replace(replace(Destination,"(.*\\\)",""),"\"","")
EVAL-change_type = "filesystem"
EVAL-status = "success"
EVAL-object_category = "wmi"
#EVAL-user_name = replace(User, "(.*)\\\(.+)$","\2")
LOOKUP-action = sysmon_operation_lookup EventCode, Operation OUTPUT action

# ID 21
# CIM: Change.Endpoint_Changes
#   EventType, Operation, Consumer, Filter
[sysmon:events:wmiconsumerbindfilter]
REPORT-extra = sysmon-consumer-unquote,sysmon-filter-unquote
FIELDALIAS-user_name = User asnew user_name
FIELDALIAS-object_path = ConsumerNoQuotes as object_path
FIELDALIAS-object_attrs = FilterNoQuotes AS object_attrs
FIELDALIAS-result = Operation as result
EVAL-object = replace(replace(Consumer,"(\\\\\"\")",""),".+(\\\\\")","")
EVAL-change_type = "filesystem"
EVAL-status = "success"
EVAL-object_category = "wmi"
#EVAL-user_name = replace(User, "(.*)\\\(.+)$","\2")
LOOKUP-action = sysmon_operation_lookup EventCode, Operation OUTPUT action

# ID 22
# CIM: Network_Resolution.DNS
[sysmon:events:dnsquery]
REPORT-sysmon-dns-query = sysmon-dns-query-results,sysmon-dns-query-results-alias,sysmon-dns-query-results-ip
FIELDALIAS-dns-query = QueryName as query, QueryStatus as reply_code_id, QueryType as query_type
FIELDALIAS-src = host as src
EVAL-dest = null()
EVAL-message_type = mvappend("Query","Response")
EVAL-answer_count = mvcount(answer)
#EVAL-query_count = mvcount(query)
EVAL-answer = lower(answer)
EVAL-answer_cname = lower(answer_cname)
EVAL-record_type_id = mvdedup(coalesce(record_type_id, 1))
LOOKUP-record_type = sysmon_dns_record_types record_type_id OUTPUT record_type_name AS record_type

#  Note. Sysmon-provided reply code values are from Windows API, not from DNS standard, 
#  affecting to reply_code_id and reply_code fields.
LOOKUP-reply_code = sysmon_dns_query_reply_codes reply_code_id OUTPUT action, reply_code


# ID 23
# CIM: Endpoint.Filesystem
[sysmon:events:filedeleted]
#FIELDALIAS-file_modify_time = UtcTime as file_modify_time
FIELDALIAS-file_is_executable = IsExecutable as file_is_executable
EVAL-object_category = "file"

# ID 24
# CIM: ??
#   Session, ClientInfo, Archived, Hashes
[sysmon:events:clipboardchanged]
REPORT-extra = sysmon-clientinfo-hostname

# ID 25
# CIM: Endpoint.Processes
[sysmon:events:processtampering]
# TODO: result does not exist in Endpoint model, and loaded_file is meant for other purposes. action=modified.
FIELDALIAS-result = Type as result, Type as loaded_file

# ID 26
# CIM: Endpoint.Filesystem
[sysmon:events:filedeletedlog]
FIELDALIAS-file_is_executable = IsExecutable as file_is_executable
EVAL-object_category = "file"

# ID 27
[sysmon:events:fileblockexecutable]

# ID 28
# CIM: Endpoint.Filesystem
[sysmon:events:fileblockshredding]
FIELDALIAS-file_is_executable = IsExecutable as file_is_executable
EVAL-object_category = "file"

# ID 255
# CIM: Alerts
[sysmon:events:error]
FIELDALIAS-signature_id = ID as signature_id
FIELDALIAS-description = Description as description
FIELDALIAS-dest = host as dest
FIELDALIAS-src = host as src
LOOKUP-alert-severity = sysmon_errors id as ID OUTPUT alert_type as type, severity
EVAL-app = "Microsoft Sysmon"
EVAL-id = _time ."-". event_id
EVAL-status = "error"

# extra
FIELDALIAS-result = Description as result


# Fallback. No index-time transform, only local rename in search head.
#[sysmon:events]
#LOOKUP-sysmon-traffic-direction = sysmon_direction Initiated OUTPUTNEW direction
#LOOKUP-signature-dns = sysmon_dns_query_reply_codes reply_code_id OUTPUTNEW signature, action


#---------------------------------------------------------------------------------------------
# Windows TA 9.0 changes sourcetype of events. If this addon was not enabled during event
# ingestion, the events may have been transformed to:
#    sourcetype = XmlWinEventLog
#    source = XmlWinEventLog:Microsoft-Windows-Sysmon/Operational
# This adds backwards compatibility for those events.
# Because splunk does not support sourcetype 'rename' for source match,
# we have to duplicate the sysmon:events stuff from above here.
[source::XmlWinEventLog:Microsoft-Windows-Sysmon/Operational]
TIME_PREFIX = <Data Name='UtcTime'>
TIME_FORMAT = %Y-%m-%d %H:%M:%S.%3N
TZ = UTC
ANNOTATE_PUNCT = false
AUTO_KV_JSON = false
KV_MODE = none
REPORT-sysmon-data = sysmon-data,sysmon-hashes-split,sysmon-hashes-to-filehash,sysmon-hash-to-filehash,sysmon-confighash-split,sysmon-confighash-to-filehash,sysmon-targetfilename,sysmon-targetobject,sysmon-commandline-params,sysmon-image-process,sysmon-parentimage,sysmon-parentcommandline-params,sysmon-targetimage-as-process,sysmon-sourceimage-as-parent,sysmon-imageloaded-file

FIELDALIAS-event_id = event_id as EventRecordID
FIELDALIAS-EventCode = EventCode as signature_id
#FIELDALIAS-object_path = file_path AS object_path
FIELDALIAS-integrity_level = IntegrityLevel AS process_integrity_level
FIELDALIAS-cwd = CurrentDirectory AS cwd, CurrentDirectory as process_current_directory
FIELDALIAS-logon-id = LogonGuid AS logon_guid, LogonId AS logon_id
FIELDALIAS-terminal_id = TerminalSessionId AS terminal_id
FIELDALIAS-file_version = FileVersion as file_version
FIELDALIAS-file_description = Description as file_description
FIELDALIAS-file_company = Company as file_company
FIELDALIAS-file_product = Product as file_product
FIELDALIAS-file_signature = Signature AS file_signature
FIELDALIAS-create-remote-thread = NewThreadId AS target_new_thread_id, StartAddress AS target_start_address, StartFunction AS target_start_function, StartModule AS target_start_module, TargetProcessGuid AS target_process_guid, TargetProcessId AS target_process_id
FIELDALIAS-process_exec = Image as process_exec
FIELDALIAS-parent-process = ParentImage AS parent_process_image, ParentImage as parent_process_exec, ParentProcessGuid AS parent_process_guid, ParentProcessId AS parent_process_id
FIELDALIAS-target_process_image = TargetImage as target_process_image
FIELDALIAS-src_ip = SourceIp AS src_ip
FIELDALIAS-src_host = SourceHostname AS src_host
FIELDALIAS-src_port = SourcePort AS src_port
FIELDALIAS-initiated = Initiated AS initiated
FIELDALIAS-dest_ip = DestinationIp AS dest_ip
FIELDALIAS-dest_host = DestinationHostname AS dest_host
FIELDALIAS-dest_ptr = DestinationHostname as dest_ptr
FIELDALIAS-dest_port = DestinationPort AS dest_port
FIELDALIAS-state-and-schema-version = SchemaVersion AS schema_version, State AS state
FIELDALIAS-product_version = Version as product_version
FIELDALIAS-process_name = process as process_name
#FIELDALIAS-parent_process_name = parent_process as parent_process_name
FIELDALIAS-transport = Protocol AS transport
FIELDALIAS-cmdline = CommandLine as process_cmdline, ParentCommandLine as parent_process_cmdline
FIELDALIAS-process_hash = file_hash as process_hash
FIELDALIAS-user_id = UserID AS user_id
FIELDALIAS-user = User AS user
FIELDALIAS-file_create_time = CreationUtcTime as file_create_time
#FIELDALIAS-file_create_time_prev = PreviousCreationUtcTime as file_create_time_prev
FIELDALIAS-original_file_name = OriginalFileName as original_file_name
FIELDALIAS-dvc = Computer asnew dvc, host asnew dvc
FIELDALIAS-process_id = SourceProcessId asnew process_id, ProcessId asnew process_id
FIELDALIAS-process_guid = ProcessGuid asnew process_guid, TargetProcessGuid asnew process_guid, TargetProcessGUID asnew process_guid
FIELDALIAS-session_id = SourceProcessGuid asnew session_id, ProcessGuid asnew session_id

# DNS query
REPORT-sysmon-dns-query = sysmon-dns-query-results,sysmon-dns-query-results-alias,sysmon-dns-query-results-ip
FIELDALIAS-dns-query = QueryName as query, QueryStatus as reply_code_id, QueryType as query_type
EVAL-message_type = if(EventCode==22, mvappend('Query','Response'), null())
EVAL-answer_count = mvcount(answer)

LOOKUP-sysmon-action1 = sysmon_state_lookup EventCode, State OUTPUTNEW action, status
LOOKUP-sysmon-action2 = sysmon_eventtype_lookup EventCode, EventType OUTPUTNEW action
LOOKUP-sysmon-traffic-direction = sysmon_direction Initiated OUTPUTNEW direction
LOOKUP-dns-reply-code = sysmon_dns_query_reply_codes signature_id, reply_code_id OUTPUTNEW action, reply_code
LOOKUP-signature-main = sysmon_eventcodes EventCode OUTPUTNEW EventDescription, EventDescription AS signature, action

# Error -> Alerts datamodel
FIELDALIAS-severity_id = ID as severity_id
FIELDALIAS-description = Description as description
FIELDALIAS-dest = host as dest
LOOKUP-alert-severity = sysmon_errors id as ID OUTPUT alert_type as type, severity
EVAL-app = "Microsoft Sysmon"
EVAL-id = _time ."-". event_id

EVAL-protocol = if(Initiated=="true",DestinationPortName,SourcePortName)
#EVAL-dest = coalesce(DestinationHostname,DestinationIp,Computer,host)
#EVAL-src = coalesce(SourceHostname,SourceIp)
EVAL-src = coalesce(if(Initiated=="true", host, src_ip), Computer, host)
EVAL-dest = if(Initiated=="true", dest_ip, host)
EVAL-transport_dest_port = mvzip(transport,dest_port,"/")
#EVAL-registry_key_name = if(EventCode IN (12,13) AND EventType IN ("SetValue","DeleteValue"), sm_registry_path_2, sm_registry_path_3)
#EVAL-registry_path = sm_registry_path_1 . sm_registry_path_2 . if(EventType IN ("SetValue","DeleteValue"), "", "\\". sm_registry_path_3)
#EVAL-registry_value_name = if(EventCode IN (12,13) AND EventType IN ("SetValue","DeleteValue"), sm_registry_path_3, null())
#EVAL-registry_value_data = if(EventCode==13, replace(Details, "^\(Empty\)$", ""), null())
#EVAL-registry_path_target = if(EventCode==14, NewName, null())
EVAL-object_path = case(EventCode=="12" OR EventCode=="13", TargetObject, EventCode=="14", NewName, EventCode=="11", TargetFilename)
EVAL-object = coalesce(object, case(EventCode=="12" OR EventCode=="13", TargetObject, EventCode=="14", NewName, EventCode=="11", TargetFilename))
EVAL-SHA256 = lower(SHA256)
EVAL-SHA512 = lower(SHA512)
EVAL-IMPHASH = lower(IMPHASH)
EVAL-MD5 = lower(MD5)
EVAL-SHA1 = lower(SHA1)
EVAL-process_params = replace(replace(replace(process_params, "&lt;", "<"), "&gt;", ">"), "&amp;", "&")
EVAL-parent_process_params = replace(replace(replace(parent_process_params, "&lt;", "<"), "&gt;", ">"), "&amp;", "&")
EVAL-app = replace(replace(replace(coalesce(Image, SourceImage), "&lt;", "<"), "&gt;", ">"), "&amp;", "&")
EVAL-process_image = replace(replace(replace(coalesce(Image, SourceImage), "&lt;", "<"), "&gt;", ">"), "&amp;", "&")
EVAL-Image = replace(replace(replace(Image, "&lt;", "<"), "&gt;", ">"), "&amp;", "&")
EVAL-process = coalesce(replace(replace(replace(process, "&lt;", "<"), "&gt;", ">"), "&amp;", "&"), if(EventCode=="6","System",null()))
EVAL-file_signature_status = case(EventCode!=6 AND EventCode!=7, null(), match(Signed, "Failed to open"), "open_failed", SignatureStatus=="?", "unknown", 1==1, coalesce(lower(SignatureStatus), "unknown"))
EVAL-file_signature_valid = case(EventCode!=6 AND EventCode!=7, null(), match(Signed, "failed"), "unknown", Signed=="true" AND SignatureStatus=="Valid", "true", 1==1, "false")
#EVAL-process_path = if(isnotnull(process), coalesce(process_path, ""), process_path)
EVAL-vendor_product = "Microsoft Sysmon"
EVAL-status = case(EventCode==4, if(State=="Stopped", "stopped", "started"), EventCode==1, "started", EventCode==5, "stopped", EventCode==255, "critical", 1==1, "success")
#EVAL-file_create_time = if(match(file_create_time, "^20"), strptime(file_create_time ." UTC", "%Y-%m-%d %H:%M:%S.%N %Z"), file_create_time)

